{
  "openapi": "3.0.0",
  "info": {
    "title": "Winnin challenger",
    "version": "1.0.0",
    "contact": {
      "name": "Diego Ramos",
      "url": "http://suporteapi.com",
      "email": "diegorbrito9@gmail.com"
    }
  },
  "servers": [
    {
      "url": "https://winnin-challenger.rms-diego.cloud/",
      "description": "production server"
    },
    {
      "url": "http://localhost:3333",
      "description": "local development server"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "summary": "health check route",
        "tags": ["Health check"],
        "responses": {
          "200": {
            "description": "route to validate that the server is healthy",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "server is running"
                    },
                    "documentation": {
                      "type": "string",
                      "example": "/docs"
                    },
                    "instanceId": {
                      "type": "string",
                      "example": "..."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/posts/range": {
      "get": {
        "summary": "Find posts within a specific date range and sorted by a specific field.",
        "description": "Retrieves posts created within the given date range and sorted by a specific field.",
        "tags": ["Posts"],
        "parameters": [
          {
            "name": "startedAt",
            "in": "query",
            "required": true,
            "description": "The start date for the range filter (ISO format).",
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2024-09-25T00:00:00"
            }
          },
          {
            "name": "finishedAt",
            "in": "query",
            "required": true,
            "description": "The end date for the range filter (ISO format).",
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2024-09-25T00:00:00"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "required": true,
            "description": "sorting field, e.g., 'ups', 'commentsQuantity'.",
            "schema": {
              "type": "string",
              "enum": ["ups", "commentsQuantity"],
              "example": "ups"
            }
          },
          {
            "name": "postsQuantity",
            "in": "query",
            "required": false,
            "description": "Number of posts you want to retrieve.",
            "schema": {
              "type": "integer",
              "example": 100
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "required": false,
            "description": "The current page number.",
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of posts within the specified date range.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "postsQuantity": {
                      "type": "integer",
                      "description": "The total number of posts returned.",
                      "example": 50
                    },
                    "currentPage": {
                      "type": "integer",
                      "description": "The current page number.",
                      "example": 1
                    },
                    "posts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "commentsQuantity": {
                            "type": "integer",
                            "description": "The number of comments on the post."
                          },
                          "ups": {
                            "type": "integer",
                            "description": "The number of up votes the post received."
                          },
                          "id": {
                            "type": "string",
                            "description": "The unique identifier of the post."
                          },
                          "authorFullName": {
                            "type": "string",
                            "description": "The full name of the post's author."
                          },
                          "title": {
                            "type": "string",
                            "description": "The title of the post."
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The creation date of the post (ISO format)."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No post was found in the range.",
            "content": {
              "application/json": {
                "examples": {
                  "invalid_date": {
                    "summary": "No posts in range",
                    "value": {
                      "error": "no post was found in the range"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters.",
            "content": {
              "application/json": {
                "examples": {
                  "invalid_date": {
                    "summary": "Invalid query parameters (ISO date issue)",
                    "value": {
                      "error": [
                        {
                          "property": "finishedAt",
                          "message": "invalid date"
                        }
                      ]
                    }
                  },
                  "invalid_sortBy": {
                    "summary": "Invalid sortBy parameter",
                    "value": {
                      "error": [
                        {
                          "property": "sortBy",
                          "message": "sortBy must be either 'commentsQuantity' or 'ups'"
                        }
                      ]
                    }
                  },
                  "required_parameters": {
                    "summary": "Required date parameters",
                    "value": {
                      "error": [
                        {
                          "property": "finishedAt",
                          "message": "finishedAt is required"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/posts": {
      "get": {
        "summary": "Find many posts sorted by a specific field.",
        "description": "Retrieves posts created sorted by a specific field.",
        "tags": ["Posts"],
        "parameters": [
          {
            "name": "sortBy",
            "in": "query",
            "required": true,
            "description": "sorting field, e.g., 'ups', 'commentsQuantity'.",
            "schema": {
              "type": "string",
              "enum": ["ups", "commentsQuantity"],
              "example": "ups"
            }
          },
          {
            "name": "postsQuantity",
            "in": "query",
            "required": false,
            "description": "Number of posts you want to retrieve.",
            "schema": {
              "type": "integer",
              "example": 100
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "required": false,
            "description": "The current page number.",
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of posts sorted by a specific field.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "postsQuantity": {
                      "type": "integer",
                      "description": "The total number of posts returned.",
                      "example": 100
                    },
                    "currentPage": {
                      "type": "integer",
                      "description": "The current page number.",
                      "example": 1
                    },
                    "posts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "commentsQuantity": {
                            "type": "integer",
                            "description": "The number of comments on the post."
                          },
                          "ups": {
                            "type": "integer",
                            "description": "The number of up votes the post received."
                          },
                          "id": {
                            "type": "string",
                            "description": "The unique identifier of the post."
                          },
                          "authorFullName": {
                            "type": "string",
                            "description": "The full name of the post's author."
                          },
                          "title": {
                            "type": "string",
                            "description": "The title of the post."
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The creation date of the post (ISO format)."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No posts found.",
            "content": {
              "application/json": {
                "examples": {
                  "invalid_date": {
                    "summary": "No posts found",
                    "value": {
                      "error": "no posts found"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters.",
            "content": {
              "application/json": {
                "examples": {
                  "invalid_sortBy": {
                    "summary": "Invalid sortBy parameter",
                    "value": {
                      "error": [
                        {
                          "property": "sortBy",
                          "message": "sortBy must be either 'commentsQuantity' or 'ups'"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
